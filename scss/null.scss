html {
	box-sizing: border-box;
}
* {
	padding: 0;
	margin: 0;
	border: 0;
}
*,
*::before,
*::after {
	// box-sizing: border-box;
	box-sizing: inherit;
}
*::before,
*::after {
	display: inline-block;
}
:focus,
:active {
	outline: none;
}
a:focus,
a:active {
	outline: none;
}
// дает обводку на блоках сайта, т.к. есть focus() на блоках в JS
:focus-visible {
	outline: toRem(2) solid $textColorLight;
	// outline-offset: 2px; // отступ обводки при focus
}
a:focus-visible,
button:focus-visible,
iframe:focus-visible {
	outline: toRem(2) solid $textColorLight;
	// outline-offset: 2px; // отступ обводки при focus
}
body {
	// text-rendering: optimizeLegibility;
	-ms-text-size-adjust: 100%;
	-moz-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
input,
button,
textarea {
	font-family: inherit;
	font-size: inherit;
	line-height: inherit;
	color: inherit;
	background-color: transparent;
}

input,
textarea {
	width: 100%;
}

label {
	display: inline-block;
}

button,
select,
option {
	cursor: pointer;
}
a {
	display: inline-block;
	color: inherit;
	text-decoration: none;
}
// ul li {
// 	list-style: none;
// }

// Убираем стандартный маркер маркированному списку, у которого есть атрибут class
:where(ul[class]) {
	list-style: none;
}

img {
	vertical-align: top;
	font-style: italic; // если картинка не отображается, Alt будет написан italic
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
	text-wrap: balance;

	@media (max-width: $mobileS) {
		hyphens: auto; // перенос очень длинных слов в нужном месте с "-" если у пользователя задан очень крупный шрифт
	}
}

p,
li,
figcaption {
	@supports (text-wrap: pretty) {
		text-wrap: pretty;
	}
	// max-width: 65ch;
	@media (max-width: $mobileS) {
		hyphens: auto; // перенос очень длинных слов в нужном месте с "-" если у пользователя задан очень крупный шрифт
	}
}

// Приводим к единому цвету svg-элементы
svg *[fill] {
	fill: currentColor;
}
svg *[stroke] {
	stroke: currentColor;
}

// Чиним баг задержки смены цвета при взаимодействии с svg-элементами
svg * {
	transition-property: fill, stroke;
}
